function downloadCv(e){window.location.href="http://localhost:8080/api/cvfile/download/".concat(e)}function deleteCv(e){fetch("http://localhost:8080/api/cvfile/delete/".concat(e),{method:"DELETE"}).then(function(e){if(!e.ok)return e.text().then(function(e){throw new Error(e)});alert("CV zostało usunięte."),location.reload()}).catch(function(e){console.error("Błąd podczas usuwania CV:",e),alert("Wystąpił błąd podczas usuwania CV: "+e.message)})}document.addEventListener("DOMContentLoaded",function(){var e=sessionStorage.getItem("userName"),o=sessionStorage.getItem("userId"),t=(e?(document.getElementById("userStrong").textContent=e,document.getElementById("userGreeting").textContent=e):console.error("Nazwisko użytkownika nie znalezione w sessionStorage."),document.querySelector(".cv__boxes"));function n(e){fetch("http://localhost:8080/api/cvfile/list/".concat(e)).then(function(e){if(e.ok)return e.json();throw new Error("Network response was not ok")}).then(function(e){e.forEach(function(e){var o,n;o=e,(e=document.createElement("div")).className="cv__box",(n=document.createElement("img")).src="./dist/img/cv-box.png",n.alt="Zdjęcie stworzonego CV",n.className="cv__box-photo",e.appendChild(n),(n=document.createElement("button")).className="delete-btn",n.innerHTML='<i class="fa-solid fa-trash"></i>',n.onclick=function(){return deleteCv(o.id)},e.appendChild(n),(n=document.createElement("button")).className="download-btn",n.innerHTML='Download | <i class="fa-solid fa-file-pdf"></i>',n.onclick=function(){return downloadCv(o.id)},e.appendChild(n),t.appendChild(e)})}).catch(function(e){console.error("Błąd podczas ładowania CV:",e)})}t?o?n(o):console.error("UserId nie znaleziono w sessionStorage."):console.error("Element kontenera CV nie został znaleziony.")});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJwYW5lbC5qcyJdLCJuYW1lcyI6WyJkb3dubG9hZEN2IiwicmVzcG9uc2UiLCJ3aW5kb3ciLCJsb2NhdGlvbiIsIkVycm9yIiwiZXJyb3JUZXh0IiwiY3ZGaWxlSWQiLCJkZWxldGVDdiIsImNvbnNvbGUiLCJhbGVydCIsInRoZW4iLCJvayIsInRleHQiLCJyZWxvYWQiLCJlcnJvciIsIm1lc3NhZ2UiLCJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJnZXRJdGVtIiwidXNlck5hbWUiLCJzZXNzaW9uU3RvcmFnZSIsImdldEVsZW1lbnRCeUlkIiwidGV4dENvbnRlbnQiLCJxdWVyeVNlbGVjdG9yIiwibG9hZFVzZXJDdkZpbGVzIiwidXNlcklkIiwiZmV0Y2giLCJmb3JFYWNoIiwianNvbiIsImN2RmlsZSIsImN2RmlsZXMiLCJjdkJveCIsImNsYXNzTmFtZSIsImNyZWF0ZUVsZW1lbnQiLCJhcHBlbmRDaGlsZCIsImRlbGV0ZUJ0biIsImlubmVySFRNTCIsImltZyIsImRvd25sb2FkQnRuIiwiaWQiLCJjdkJveGVzQ29udGFpbmVyIiwib25jbGljayJdLCJtYXBwaW5ncyI6IkFBMkVBLFNBYWdCQSxXQUFPQyxHQVpuQkMsT0FhZ0JDLFNBQVVDLEtBQU1DLDZDQUFBQSxPQUFVQyxDQUFBLENBWjlDLENBRUEsU0FhVUMsU0FDS0QsR0FDSEUsTUFBQUEsMkNBQUFBLE9BQWlERixDQUFBLEVBQUEsQ0FDakRHLE9BQU0sUUFDUixDQUFBLEVBQ1ZDLEtBQUEsU0FBQVQsR0FiWSxHQUFJQSxDQUFBQSxFQUFTVSxHQUlULE9BQU9WLEVBQVNXLEtBQUssRUFBRUYsS0FBSyxTQUFDTCxHQUN6QixNQUFNLElBQUlELE1BQU1DLENBQVMsQ0FDN0IsQ0FBQyxFQUxESSxNQUFNLHNCQUFzQixFQUM1Qk4sU0FBU1UsT0FBTyxDQU14QixDQUFDLEVBQUMsTUFDSyxTQUFDQyxHQUNKTixRQUFRTSxNQUFNLDRCQUE2QkEsQ0FBSyxFQUNoREwsTUFBTSxzQ0FBd0NLLEVBQU1DLE9BQU8sQ0FDL0QsQ0FBQyxDQUNULENBakdBQyxTQUFTQyxpQkFBaUIsbUJBQW9CLFdBQTlDRCxJQUFTQyxFQUFBQSxlQUFpQkMsUUFBa0IsVUFBRSxFQUVwQ0MsRUFBV0MsZUFBZUYsUUFBUSxRQUFVLEVBZTlDVixHQVRBUSxHQUVIQSxTQUFNSyxlQUFBLFlBQUEsRUFBQUMsWUFBQUgsRUFDSFgsU0FBYWEsZUFBQyxjQUFBLEVBQUFDLFlBQUFILEdBQWRYLFFBQVFNLE1BQU0sdURBQXVELEVBTXZERSxTQUFBTyxjQUFBLFlBQThDLEdBK0JoRSxTQUtZQyxFQUFBQyxHQUNBQyxNQUFPekIseUNBQUFBLE9BQWV3QixDQUFBLENBQUEsRUFFcEJmLEtBQUEsU0FBQVQsR0FDTTBCLEdBQU8xQixFQUFDVSxHQUliLE9BQUFWLEVBQU0yQixLQUFLLEVBSEVDLE1BQU0sSUFBQ3pCLE1BQUEsNkJBQUEsQ0FJdkJJLENBQU8sRUFDVEUsS0FBQSxTQUFBb0IsR0FDVkEsRUFBQUgsUUFBQSxTQUFBRSxHQXhDSUUsSUFBa0JGLEVBS2RHLEVBTGNILEVBMkNWQSxHQXpDSWIsRUFBUUEsU0FBQ2lCLGNBQW9CLEtBQUEsR0FDL0JELFVBQUEsV0FFTkEsRUFBWWhCLFNBQUFpQixjQUFlLEtBQUEsR0FDekJDLElBQUFBLHdCQUVBQyxFQUFBQSxJQUFTLHlCQUNmQSxFQUFBQSxVQUFtQixnQkFDbkJBLEVBQVVDLFlBQVlDLENBQUEsR0FDdUJGLEVBQVZOLFNBQVVJLGNBQUEsUUFBQSxHQUFBRCxVQUFBLGFBQzdDRCxFQUFNRyxVQUFZQyxvQ0FFWkcsRUFBQUEsUUFBY3RCLFdBQUFBLE9BQVNpQixTQUFBQSxFQUFjTSxFQUFBLENBQVEsRUFDbkRELEVBQUFBLFlBQXFCSCxDQUFHLEdBR0ZHLEVBQUF0QixTQUFBaUIsY0FBQSxRQUFBLEdBQU1qQyxVQUFrQnVDLGVBQUdELEVBQUFGLFVBQzNDRixrREFFTk0sRUFBZ0JDLFFBQUNQLFdBQUFBLE9BQVlILFdBQU1GLEVBQUFVLEVBQUEsQ0FBQSxFQUN2Q1IsRUFBQUcsWUFBQUksQ0FBQSxFQUdJWixFQUFLUSxZQUFBSCxDQUFBLENBbUJMUCxDQUFBQSxDQUNHLENBQUEsRUFBQSxNQUNXLFNBQUFWLEdBQ2xCTixRQUFBTSxNQUFBLDZCQUFBQSxDQUFBLENBQ0YsQ0FBQSxDQUdGLENBekRRMEIsRUE2RFJmLEVBQ1NELEVBQUFDLENBQUEsRUFHQWYsUUFBS0ksTUFBQ2IseUNBQWEsRUFoRXhCTyxRQUFBTSxNQUFBLDZDQUFBLENBcURKLENBQUMiLCJmaWxlIjoidXNlcnBhbmVsLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCAoKSA9PiB7XHJcbiAgICBcclxuICAgIGNvbnN0IHVzZXJOYW1lID0gc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgndXNlck5hbWUnKTtcclxuICAgIGNvbnN0IHVzZXJJZCA9IHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oJ3VzZXJJZCcpO1xyXG5cclxuICAgXHJcbiAgICBpZiAodXNlck5hbWUpIHtcclxuICAgICAgIFxyXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd1c2VyU3Ryb25nJykudGV4dENvbnRlbnQgPSB1c2VyTmFtZTtcclxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndXNlckdyZWV0aW5nJykudGV4dENvbnRlbnQgPSB1c2VyTmFtZTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcignTmF6d2lza28gdcW8eXRrb3duaWthIG5pZSB6bmFsZXppb25lIHcgc2Vzc2lvblN0b3JhZ2UuJyk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gV3lzenVraXdhbmllIGtvbnRlbmVyYSBkbGEgQ1ZcclxuICAgIGNvbnN0IGN2Qm94ZXNDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY3ZfX2JveGVzJyk7XHJcbiAgICBpZiAoIWN2Qm94ZXNDb250YWluZXIpIHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKCdFbGVtZW50IGtvbnRlbmVyYSBDViBuaWUgem9zdGHFgiB6bmFsZXppb255LicpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICAvLyBGdW5rY2phIGRvIHR3b3J6ZW5pYSBpIGRvZGF3YW5pYSBib3jDs3cgQ1ZcclxuICAgIGZ1bmN0aW9uIGNyZWF0ZUN2Qm94KGN2RmlsZSkge1xyXG4gICAgICAgIGNvbnN0IGN2Qm94ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICAgICAgY3ZCb3guY2xhc3NOYW1lID0gJ2N2X19ib3gnO1xyXG5cclxuICAgICAgICBjb25zdCBpbWcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbWcnKTtcclxuICAgICAgICBpbWcuc3JjID0gJy4vZGlzdC9pbWcvY3YtYm94LnBuZyc7IFxyXG4gICAgICAgIGltZy5hbHQgPSAnWmRqxJljaWUgc3R3b3J6b25lZ28gQ1YnO1xyXG4gICAgICAgIGltZy5jbGFzc05hbWUgPSAnY3ZfX2JveC1waG90byc7XHJcbiAgICAgICAgY3ZCb3guYXBwZW5kQ2hpbGQoaW1nKTtcclxuXHJcbiAgICAgICAgY29uc3QgZGVsZXRlQnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XHJcbiAgICAgICAgZGVsZXRlQnRuLmNsYXNzTmFtZSA9ICdkZWxldGUtYnRuJztcclxuICAgICAgICBkZWxldGVCdG4uaW5uZXJIVE1MID0gJzxpIGNsYXNzPVwiZmEtc29saWQgZmEtdHJhc2hcIj48L2k+JztcclxuICAgICAgICBkZWxldGVCdG4ub25jbGljayA9ICgpID0+IGRlbGV0ZUN2KGN2RmlsZS5pZCk7XHJcbiAgICAgICAgY3ZCb3guYXBwZW5kQ2hpbGQoZGVsZXRlQnRuKTtcclxuXHJcbiAgICAgICAgY29uc3QgZG93bmxvYWRCdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcclxuICAgICAgICBkb3dubG9hZEJ0bi5jbGFzc05hbWUgPSAnZG93bmxvYWQtYnRuJztcclxuICAgICAgICBkb3dubG9hZEJ0bi5pbm5lckhUTUwgPVxyXG4gICAgICAgICAgICAnRG93bmxvYWQgfCA8aSBjbGFzcz1cImZhLXNvbGlkIGZhLWZpbGUtcGRmXCI+PC9pPic7XHJcbiAgICAgICAgZG93bmxvYWRCdG4ub25jbGljayA9ICgpID0+IGRvd25sb2FkQ3YoY3ZGaWxlLmlkKTtcclxuICAgICAgICBjdkJveC5hcHBlbmRDaGlsZChkb3dubG9hZEJ0bik7XHJcblxyXG4gICAgICAgIGN2Qm94ZXNDb250YWluZXIuYXBwZW5kQ2hpbGQoY3ZCb3gpO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGxvYWRVc2VyQ3ZGaWxlcyh1c2VySWQpIHtcclxuICAgICAgICBmZXRjaChgaHR0cDovL2xvY2FsaG9zdDo4MDgwL2FwaS9jdmZpbGUvbGlzdC8ke3VzZXJJZH1gKVxyXG4gICAgICAgICAgICAudGhlbigocmVzcG9uc2UpID0+IHtcclxuICAgICAgICAgICAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcclxuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ05ldHdvcmsgcmVzcG9uc2Ugd2FzIG5vdCBvaycpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLnRoZW4oKGN2RmlsZXMpID0+IHtcclxuICAgICAgICAgICAgICAgIGN2RmlsZXMuZm9yRWFjaCgoY3ZGaWxlKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgY3JlYXRlQ3ZCb3goY3ZGaWxlKTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAuY2F0Y2goKGVycm9yKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCdCxYLEhWQgcG9kY3phcyDFgmFkb3dhbmlhIENWOicsIGVycm9yKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgXHJcbiAgICBpZiAodXNlcklkKSB7XHJcbiAgICAgICAgbG9hZFVzZXJDdkZpbGVzKHVzZXJJZCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ1VzZXJJZCBuaWUgem5hbGV6aW9ubyB3IHNlc3Npb25TdG9yYWdlLicpO1xyXG4gICAgfVxyXG59KTtcclxuXHJcblxyXG5mdW5jdGlvbiBkb3dubG9hZEN2KGN2RmlsZUlkKSB7XHJcbiAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IGBodHRwOi8vbG9jYWxob3N0OjgwODAvYXBpL2N2ZmlsZS9kb3dubG9hZC8ke2N2RmlsZUlkfWA7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGRlbGV0ZUN2KGN2RmlsZUlkKSB7XHJcbiAgICBmZXRjaChgaHR0cDovL2xvY2FsaG9zdDo4MDgwL2FwaS9jdmZpbGUvZGVsZXRlLyR7Y3ZGaWxlSWR9YCwge1xyXG4gICAgICAgIG1ldGhvZDogJ0RFTEVURScsXHJcbiAgICB9KVxyXG4gICAgICAgIC50aGVuKChyZXNwb25zZSkgPT4ge1xyXG4gICAgICAgICAgICBpZiAocmVzcG9uc2Uub2spIHtcclxuICAgICAgICAgICAgICAgIGFsZXJ0KCdDViB6b3N0YcWCbyB1c3VuacSZdGUuJyk7XHJcbiAgICAgICAgICAgICAgICBsb2NhdGlvbi5yZWxvYWQoKTsgLy8gUHJ6ZcWCYWR1aiBzdHJvbsSZIHBvIHVzdW5pxJljaXUgQ1ZcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZS50ZXh0KCkudGhlbigoZXJyb3JUZXh0KSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGVycm9yVGV4dCk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLmNhdGNoKChlcnJvcikgPT4ge1xyXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKCdCxYLEhWQgcG9kY3phcyB1c3V3YW5pYSBDVjonLCBlcnJvcik7XHJcbiAgICAgICAgICAgIGFsZXJ0KCdXeXN0xIVwacWCIGLFgsSFZCBwb2RjemFzIHVzdXdhbmlhIENWOiAnICsgZXJyb3IubWVzc2FnZSk7XHJcbiAgICAgICAgfSk7XHJcbn0iXX0=
