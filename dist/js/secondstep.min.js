function updatePreview(e){var t=e.target.id,e=e.target.value,t=document.getElementById("preview-"+t);t&&(t.querySelector("p").innerHTML=e)}function insertTag(e){var t,n,o,r,a=document.querySelector("textarea:focus");a&&(t=a.selectionStart,r=a.selectionEnd,o=(n=a.value).substring(0,t),r=n.substring(r,n.length),a.value=o+e+r,a.selectionStart=a.selectionEnd=t+e.length/2,a.focus(),updatePreview({target:a}))}var inputs=document.querySelectorAll("input, textarea"),uploadedPhoto=(inputs.forEach(function(e){e.addEventListener("input",updatePreview)}),document.querySelector(".btn-bold").addEventListener("click",function(){return insertTag("<b></b>")}),document.querySelector(".btn-strike-through").addEventListener("click",function(){return insertTag("<s></s>")}),document.querySelector(".btn-underline").addEventListener("click",function(){return insertTag("<u></u>")}),document.querySelector(".btn-list").addEventListener("click",function(){return insertTag("<ul><li></li></ul>")}),document.querySelector(".btn-ordered-list").addEventListener("click",function(){return insertTag("<ol><li></li></ol>")}),null);function getParameterByName(e){return new URLSearchParams(window.location.search).get(e)}document.getElementById("photo-upload").addEventListener("change",function(e){var t,e=e.target.files[0];e&&(uploadedPhoto=e,(t=new FileReader).onload=function(e){document.getElementById("preview-photo").innerHTML='<img src="'.concat(e.target.result,'" alt="Photo" style="max-width: 150px; max-height: 150px; margin-bottom: 20px; border-radius: 50%; overflow: hidden;">')},t.readAsDataURL(e))}),document.addEventListener("DOMContentLoaded",function(){var e,t=getParameterByName("image");t?(e=document.getElementById("cv-preview"))?(e.style.backgroundImage="url(".concat(decodeURIComponent(t),")"),e.style.backgroundSize="cover",e.style.backgroundPosition="center"):console.error('Element o ID "cv-preview" nie został znaleziony.'):console.error('Parametr "image" nie został znaleziony w URL.'),document.getElementById("save-cv").addEventListener("click",function(e){e.preventDefault(),console.log("Kliknięcie zarejestrowane!");var e=document.getElementById("cv-preview").outerHTML,t=(console.log("Pobrany HTML:",e),new FormData);t.append("cvContent",new Blob([e],{type:"text/html"})),t.append("userId",sessionStorage.getItem("userId")),uploadedPhoto&&t.append("photo",uploadedPhoto),console.log("Rozpoczynanie fetch..."),fetch("http://localhost:8080/api/cvfile/uploadPdf",{method:"POST",body:t}).then(function(e){return console.log("Fetch zakończony. Status odpowiedzi:",e.status),e.ok?e.text():(console.error("Fetch error:",e),e.text().then(function(e){throw new Error(e)}))}).then(function(e){console.log("Odpowiedź serwera:",e);try{var t=JSON.parse(e);t.cvFileId&&(sessionStorage.setItem("cvFileId",t.cvFileId),console.log("cvFileId zapisany w sessionStorage:",t.cvFileId))}catch(e){console.error("Błąd parsowania odpowiedzi:",e)}alert("CV saved successfully!"),window.location.href="thirdstep.html"}).catch(function(e){console.error("Błąd podczas przetwarzania odpowiedzi:",e),alert("Wystąpił błąd podczas zapisywania CV: "+e.message)})})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
