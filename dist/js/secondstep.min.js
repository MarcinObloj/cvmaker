function updatePreview(e){var t=e.target.id,e=e.target.value,t=document.getElementById("preview-"+t);t&&(t.querySelector("p").innerHTML=e)}function insertTag(e){var t,n,a,i,d=document.querySelector("textarea:focus");d&&(t=d.selectionStart,i=d.selectionEnd,a=(n=d.value).substring(0,t),i=n.substring(i,n.length),d.value=a+e+i,d.selectionStart=d.selectionEnd=t+e.length/2,d.focus(),updatePreview({target:d}))}var inputs=document.querySelectorAll("input, textarea"),uploadedPhoto=(inputs.forEach(function(e){e.addEventListener("input",updatePreview)}),document.querySelector(".btn-bold").addEventListener("click",function(){return insertTag("<b></b>")}),document.querySelector(".btn-strike-through").addEventListener("click",function(){return insertTag("<s></s>")}),document.querySelector(".btn-underline").addEventListener("click",function(){return insertTag("<u></u>")}),document.querySelector(".btn-list").addEventListener("click",function(){return insertTag("<ul><li></li></ul>")}),document.querySelector(".btn-ordered-list").addEventListener("click",function(){return insertTag("<ol><li></li></ol>")}),null);function getParameterByName(e){return new URLSearchParams(window.location.search).get(e)}document.getElementById("photo-upload").addEventListener("change",function(e){var t,e=e.target.files[0];e&&(uploadedPhoto=e,(t=new FileReader).onload=function(e){document.getElementById("preview-photo").innerHTML='<img src="'.concat(e.target.result,'" alt="Photo" style="max-width: 150px; max-height: 150px; margin-bottom: 20px; border-radius: 50%; overflow: hidden;">')},t.readAsDataURL(e))}),document.addEventListener("DOMContentLoaded",function(){var e=localStorage.getItem("selectTemplate");if(e){var t=document.querySelector(".cv-preview");switch(e){case"cv-classic":t.classList.add("cv-classic-style");var n=document.getElementById("preview-first-name"),a=document.getElementById("preview-last-name"),i=document.getElementById("preview-job-title"),d=document.createElement("div"),r=(d.classList.add("personal-info-boxes"),i&&n&&a&&(d.appendChild(i),d.appendChild(n),d.appendChild(a),t.prepend(d)),document.createElement("div")),i=(r.classList.add("personal-data-boxes"),[{id:"preview-email",icon:"fa-envelope"},{id:"preview-phone",icon:"fa-phone"},{id:"preview-city",icon:"fa-city"},{id:"preview-postal-code",icon:"fa-map-marker-alt"}].forEach(function(e){var t,n=document.getElementById(e.id);n&&((t=document.createElement("i")).classList.add("fa",e.icon),n.classList.add("personal-data-box"),n.prepend(t),r.appendChild(n))}),document.getElementById("preview-summary")),n=(i&&i.insertAdjacentElement("afterend",r),document.createElement("div")),o=(n.classList.add("main-box"),document.createElement("div")),c=(o.classList.add("main-box-left"),["preview-summary","preview-education","preview-skills","preview-courses"].forEach(function(e){e=document.getElementById(e);e&&o.appendChild(e)}),n.appendChild(o),document.createElement("div"));c.classList.add("main-box-right");["preview-languages","preview-hobbies"].forEach(function(e){e=document.getElementById(e);e&&c.appendChild(e)}),n.appendChild(c),t.appendChild(n);break;case"cv-modern":t.classList.add("cv-modern-style")}}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
